module glob

import os


def FnMatch(pattern as Str, path as Str) as Boolean
  if CaseInsensitive
    pattern, path = pattern.lower(), path.lower()
  end
  return FnMatchRecursive(pattern, 0, path, 0)
end


private def FnMatchRecursive(p as Str, pi as Int, s as Str, si as Int) as 
                               Boolean
  while pi < p.length()
    if p[pi] == "*"
      var j = s.length()
      repeat
        if FnMatchRecursive(p, pi + 1, s, j)
          return True
        end
        j -= 1
      until j < si
      return False
    elif p[pi] == "?"
      if si == s.length()
        return False
      end
      pi += 1
      si += 1
    else
      if si == s.length()
        return False
      elif p[pi] != s[si]
        return False
      end
      pi += 1
      si += 1
    end
  end
  return si == s.length()
end
