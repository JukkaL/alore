module codegen

-- Regression test cases for the bytecode compiler. These cover special cases
-- that have caused problems in earlier versions.
--
-- IDEA: Maybe combine with the parser module and rename to compiler or 
--       something similar; codegen implies that this is more specialized than
--       really makes sense.

import unittest


class CodeGenRegressionsSuite is Suite
  -- Complex expression as the default argument expression was miscompiled
  -- in early versions.
  def testComplexDefaultArgumentExpression()
    AssertEqual(f(1, "x"), "x")
  end
  
  private def f(x, y = x.z.z)
    return y
  end

  -- For a class with an implemented interface, the implicit Object superclass
  -- was not set. This also resulted in the _eq method to be sometimes 
  -- ignored.
  def testObjectSuperclassWithImplements()
    AssertEqual(ObjectSuperclassWithInterfaceRegression.supertype(), Object)
    AssertEqual(ObjectSuperclassWithInterfaceRegression() == 2, True)
  end
end


-- Helpers used by testObjectSuperclassWithImplements().

private class ObjectSuperclassWithInterfaceRegression implements EqTestIface
  def _eq(x)
    return True
  end
end

private interface EqTestIface
end
