module checker

import types


-- Check if an intersection type is overlapping, and report an error using msg
-- if it is.
def CheckIntersectionType(type as Intersection, msg as MessageBuilder, 
                          basic as BasicTypes, context as Context)
  var items = type.items()
  
  for i in 0 to items.length()
    for j in 0 to items.length()
      if i < j
        CheckIntersectionItemPair(items[i], items[j], msg, i, j, basic, 
                                  context)
      end
    end    
  end
end


private def CheckIntersectionItemPair(item1 as Callable, item2 as Callable, 
                                      msg as MessageBuilder, 
                                      n1 as Int, n2 as Int, 
                                      basic as BasicTypes,   
                                      context as Context)
  var isOverlapping = True
  
  if IsSameType(item1.retType, item2.retType)
    isOverlapping = False
  end
  
  for i in 0 to Min(item1.argTypes.length(), item2.argTypes.length())
    var arg1 = EraseType(item1.argTypes[i], basic)
    var arg2 = EraseType(item2.argTypes[i], basic)
    if not IsSubtype(arg1, arg2) and not IsSubtype(arg2, arg1)
      isOverlapping = False
    end
  end
  
  if isOverlapping
    msg.functionVariantsOverlap(n1, n2, context)
  end
end
